name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest
    container: ghcr.io/oknotokcomputer/devcontainer/base:latest
    strategy:
      matrix:
        targets: [
          wasm32-unknown-unknown
          # , x86_64-unknown-linux-gnu
        ]
        packages: [srclang
        # ,src-lsp-server, src-lsp-browser
        ]
        toolchains: [stable
        # , nightly
        ]

    steps:
    - uses: actions/checkout@v4
    - name: rustup update
      run: |
        rustup toolchain install ${{ matrix.toolchains }}
        rustup component add cargo
        rustup component add clippy
        rustup component add rust-src 
        rustup target add ${{ matrix.targets }}
        rustup update
    - name: Build ${{ matrix.packages }} for ${{ matrix.targets }}
      run: cargo build -Zbuild-std --verbose --target ${{ matrix.targets }} -p ${{ matrix.packages }}
    - name: Test ${{ matrix.packages }} for ${{ matrix.targets }}
      run: cargo test --verbose --target ${{ matrix.targets }} -p ${{ matrix.packages }}
    - name: Install mdBook
      run: |
        curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
        rustup update
        cargo install --version ${MDBOOK_VERSION} mdbook

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v5
    - name: install deps
      run: |
        cargo install mdbook-svgbob@0.2.0
        cargo install mdbook-alerts
    - name: Build with mdBook
      run: mdbook build
    - name: Build the ide
      run: |
        cd packages/app
        npm install
        npm run build